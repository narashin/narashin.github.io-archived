(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{522:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs-면접-준비"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-면접-준비"}},[t._v("#")]),t._v(" NodeJS 면접 준비")]),t._v(" "),a("h2",{attrs:{id:"_1-nodejs란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nodejs란"}},[t._v("#")]),t._v(" 1. NodeJS란?")]),t._v(" "),a("p",[t._v("Chrome의 V8엔진을 이용하여 브라우저에서 JavaScript를 해석하듯이 서버에서 JavaScript를 동작할 수 있도록 하는 환경(플랫폼)")]),t._v(" "),a("p",[t._v("Node.js는 클라이언트 브라우저 외부에서 웹 애플리케이션을 실행하기 위한 오픈소스 크로스 플랫폼 Javascript 런타임 환경 및 라이브러리이다. 서버 측 웹 응용 프로그램을 만드는 데 사용된다.")]),t._v(" "),a("p",[t._v("Node.js는 비동기식 이벤트 기반 모델을 사용하므로 데이터 집약적인 애플리케이션에 적합하다. 실시간 웹 애플리케이션, 네트워크 애플리케이션, 범용 애플리케이션 및 분산 시스템 개발에도 사용할 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"_2-node-js를-사용하는-이유"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-node-js를-사용하는-이유"}},[t._v("#")]),t._v(" 2. Node.js를 사용하는 이유")]),t._v(" "),a("p",[t._v("Node.js를 사용하면 확장 가능한 네트워크 프로그램을 쉽게 구축할 수 있다.")]),t._v(" "),a("ul",[a("li",[t._v("빠르다")]),t._v(" "),a("li",[t._v("통합 프로그래밍 언어 및 데이터 유형을 제공한다")]),t._v(" "),a("li",[t._v("모든 것이 비동기적이다")]),t._v(" "),a("li",[t._v("뛰어난 동시성을 제공한다")])]),t._v(" "),a("h2",{attrs:{id:"_3-node-js의-작동원리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-node-js의-작동원리"}},[t._v("#")]),t._v(" 3. Node.js의 작동원리")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.simplilearn.com/ice9/free_resources_article_thumb/Node.js_Architecture_Workflow.png",alt:"img"}})]),t._v(" "),a("ol",[a("li",[t._v("클라이언트는 웹 애플리케이션과 상호작용 하기위해 웹 서버에 요청을 보낸다. 요청은 논블로킹 또는 블로킹일 수 있다.")]),t._v(" "),a("li",[t._v("데이터를 쿼리한다.")]),t._v(" "),a("li",[t._v("데이터를 업데이트 한다.")]),t._v(" "),a("li",[t._v("Node.js는 들어오는 요청을 검색하여 이벤트 대기열에 추가한다.")]),t._v(" "),a("li",[t._v("그런 다음 요청은 이벤트 루프를 통해 하나씩 전달된다. 외부 리소스가 필요하지 않을 만큼 요청이 간단한지 확인한다.")]),t._v(" "),a("li",[t._v("이벤트 루프는 I/O 폴링과 같은 간단한 요청(논블로킹 요청)을 처리하고 해당 클라이언트에 응답을 반환한다.")])]),t._v(" "),a("p",[t._v("스레드 풀의 싱글 스레드가 싱글 컴플렉스 리퀘스트에 할당된다. 이 스레드는 데이터베이스, 파일 시스템 등과 같은 외부 리소스에 액세스하여 특정 블로킹 요청을 완료하는 역할을 한다.")]),t._v(" "),a("p",[t._v("작업이 완전히 수행되면 해당 응답을 클라이언트로 다시 보내는 이벤트 루프로 응답이 전송된다.")]),t._v(" "),a("h2",{attrs:{id:"_4-node-js가-단일-스레드인-이유"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-node-js가-단일-스레드인-이유"}},[t._v("#")]),t._v(" 4. Node.js가 단일 스레드인 이유")]),t._v(" "),a("p",[t._v("Node.js는 비동기처리를 위한 싱글 스레드를 갖는다. 일반적인 웹 로드를 할 때 단일 스레드에서 비동기처리를 수행하면 일반적인 스레드 기반 구현 대신 더 많은 성능과 확장성을 얻을 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"_5-callback-in-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-callback-in-node-js"}},[t._v("#")]),t._v(" 5. Callback in Node.js")]),t._v(" "),a("p",[t._v("콜백함수는 주어진 작업 후에 호출 됩니다. 그동안 다른 코드를 실행할 수 있으며 블로킹을 방지한다. 비동기 플랫폼이기 때문에 Node.js는 콜백에 크게 의존한다. Node의 모든 API는 콜백을 지원하도록 작성되었습니다."),a("br"),t._v("\n비동기 처리 방식의 문제점을 해결하기 위해 특정 시점에서 호출이 되도록 사용하는 함수.")]),t._v(" "),a("h2",{attrs:{id:"_6-i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-i-o"}},[t._v("#")]),t._v(" 6. I/O")]),t._v(" "),a("p",[t._v("매체와 데이터를 주고 받는 모든 프로그램, 작업 또는 장치를 설명하는 데 사용된다. 모든 전송은 한 매체의 출력과 다른 매체의 입력이다.")]),t._v(" "),a("h2",{attrs:{id:"_7-node-js는-어디서-가장-자주-사용되나"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-node-js는-어디서-가장-자주-사용되나"}},[t._v("#")]),t._v(" 7. Node.js는 어디서 가장 자주 사용되나")]),t._v(" "),a("ol",[a("li",[t._v("실시간 채팅")]),t._v(" "),a("li",[t._v("사물 인터넷")]),t._v(" "),a("li",[t._v("복잡한 SPA")]),t._v(" "),a("li",[t._v("실시간 협업 도구")]),t._v(" "),a("li",[t._v("스트리밍 애플리케이션")]),t._v(" "),a("li",[t._v("마이크로서비스 이케틱처")])]),t._v(" "),a("h2",{attrs:{id:"_8-npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-npm"}},[t._v("#")]),t._v(" 8. NPM")]),t._v(" "),a("p",[t._v("NPM은 Node.js의 모든 패키지와 모듈을 관리하는 Node Package Manager의 약자이다.")]),t._v(" "),a("ul",[a("li",[t._v("node.js 패키지/모듈에 대한 온라인 리포지토리 제공")]),t._v(" "),a("li",[t._v("Node.js 패키지를 설치하고 Node.js 버전 및 종속성을 관리하는 CLI를 제공")])]),t._v(" "),a("h3",{attrs:{id:"package-lock-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-lock-json"}},[t._v("#")]),t._v(" package-lock.json")]),t._v(" "),a("p",[t._v("package.json 파일의 의존성 선언에는 Version range가 사용되는데, 특정 버전이 아니라 버전의 범위를 의미한다.\npackage-lock.json의 경우 특정 버전을 명확하게 선언하므로서, 의존성 트리에 대한 정확한 정보를 가지고 있게 됨. 안정성을 유지하는 데 도움을 준다.")]),t._v(" "),a("h2",{attrs:{id:"_9-모듈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-모듈"}},[t._v("#")]),t._v(" 9. 모듈")]),t._v(" "),a("p",[t._v("Node.js 애필리케이션에서 함수 집합을 포함하는 데 사용할 수 있는 Javascript 라이브러리\n"),a("code",[t._v("require()")]),t._v(" 함수를 사용하여 사용할 수 있다.")]),t._v(" "),a("p",[t._v("HTTP, util, fs, URL, query string, stream, zlib")]),t._v(" "),a("h2",{attrs:{id:"_10-node-js-장점과-단점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-node-js-장점과-단점"}},[t._v("#")]),t._v(" 10. Node.js 장점과 단점")]),t._v(" "),a("h3",{attrs:{id:"장점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#장점"}},[t._v("#")]),t._v(" 장점")]),t._v(" "),a("p",[t._v("빠른 처리 및 이벤트 기반 모델\nJavascipt의 높은 접근성\nNPM을 통해 50,000개 이상 패키지 사용 가능\n대량의 데이터 스트리밍 및 I/O 집약적 작업에 적합")]),t._v(" "),a("h3",{attrs:{id:"단점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#단점"}},[t._v("#")]),t._v(" 단점")]),t._v(" "),a("p",[t._v("무거운 계산 작업에 부적합\n여러 중첩 콜백으로 끝나기 때문에 복잡도가 올라감\n관계형 데이터베이스를 다루기에 부적합\n단일 스레드이므로 CPU 집약적인 작업에 약함")]),t._v(" "),a("h2",{attrs:{id:"_11-이벤트-기반-프로그래밍이란-event-driven-programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-이벤트-기반-프로그래밍이란-event-driven-programming"}},[t._v("#")]),t._v(" 11. 이벤트 기반 프로그래밍이란 Event-driven programming")]),t._v(" "),a("p",[t._v("이벤트 기반 프로그래밍 접근 방식은 이벤트를 사용하여 다양한 기능을 트리거 한다. 이벤트는 키 입력이나 마우스 버튼 클릭과 같은 모든 것이 될 수 있다. 콜백 함수는 이벤트가 트리거 될 때마다 실행되는 요소에 이미 등록되어 있다.")]),t._v(" "),a("h2",{attrs:{id:"_12-node-js에서의-이벤트-루프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-node-js에서의-이벤트-루프"}},[t._v("#")]),t._v(" 12. Node.js에서의 이벤트 루프")]),t._v(" "),a("p",[t._v("이벤트 루프는 Node.js에서 비동기 콜백을 처리한다. Node.js의 논블로킹 입/출력의 기반이 되며 가장 중요한 환경 기능 중 하나이다.")]),t._v(" "),a("h2",{attrs:{id:"_13-node-js에서-eventemitter는"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-node-js에서-eventemitter는"}},[t._v("#")]),t._v(" 13. Node.js에서 EventEmitter는")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("EventEmitter")]),t._v("는 이벤트를 방출할 수 있는 모든 객체를 보유하는 클래스")]),t._v(" "),a("li",[a("code",[t._v("EventEmitter")]),t._v(" 클래스의 객체가 이벤트를 더질 때마다 연결된 모든 함수가 동기적으로 호출")])]),t._v(" "),a("h2",{attrs:{id:"_14-node-js의-두가지-api-함수-유형"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-node-js의-두가지-api-함수-유형"}},[t._v("#")]),t._v(" 14. Node.js의 두가지 API 함수 유형")]),t._v(" "),a("ul",[a("li",[t._v("비동기, 논블로킹")]),t._v(" "),a("li",[t._v("동기, 블로킹")])]),t._v(" "),a("h2",{attrs:{id:"_15-package-json-파일"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-package-json-파일"}},[t._v("#")]),t._v(" 15. package.json 파일")]),t._v(" "),a("p",[t._v("Node.js 시스템의 핵심. 본 파일에 특정 프로젝트에 대한 메타데이터가 들어있다. 모든 애플리케이션 또는 모듈의 루트 디렉터리에 존재.")]),t._v(" "),a("h2",{attrs:{id:"_16-node-js에서-url-모듈을-어떻게-사용할까"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-node-js에서-url-모듈을-어떻게-사용할까"}},[t._v("#")]),t._v(" 16. Node.js에서 URL 모듈을 어떻게 사용할까")]),t._v(" "),a("p",[t._v("URL 모듈은 URL 확인 및 구문 분석을 위한 다양한 유틸리티를 제공한다. 웹 주소를 읽을 수 있는 형식으로 분할 하는 데 도움이 되는 내장 모듈.")]),t._v(" "),a("h2",{attrs:{id:"_17-express-js-패키지란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-express-js-패키지란"}},[t._v("#")]),t._v(" 17. Express.js 패키지란")]),t._v(" "),a("p",[t._v("Express는 웹 및 모바일 애플리케이션을 모두 개발할 수 있는 다양한 기능을 제공하는 유연한 Node.js 웹 애플리케이션 프레임워크이다.")]),t._v(" "),a("h2",{attrs:{id:"_18-express-js-애플리케이션-만드는-법을-간단하게-설명하면"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-express-js-애플리케이션-만드는-법을-간단하게-설명하면"}},[t._v("#")]),t._v(" 18. Express.js 애플리케이션 만드는 법을 간단하게 설명하면")]),t._v(" "),a("ul",[a("li",[t._v("request 객체는 HTTP 요청을 나타내며, 요청 쿼리 문자열, 매개변수, 본문, HTTP 헤더 등에 대한 속성이 있다.")]),t._v(" "),a("li",[t._v("response 객체는 Express 앱이 HTTP 요청을 수신할 때 보내는 HTTP 응답을 나타낸다.")])]),t._v(" "),a("h2",{attrs:{id:"_19-node-js의-스트림"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-node-js의-스트림"}},[t._v("#")]),t._v(" 19. Node.js의 스트림")]),t._v(" "),a("p",[t._v("스트림은 데이터를 읽거나 지속적으로 쓸 수 있도록 하는 개체.\nReadable, Writable, Duplex, Transform 의 네가지 유형이 존재.\n각각 읽기 작업, 쓰기 작업, 읽기/쓰기 작업, 입력 기반으로 출력이 계산되는 이중 스트림 유형의 기능을 가진다.")]),t._v(" "),a("h2",{attrs:{id:"_20-hello-wolrd를-반환하는-간단한-서버를-node-js에-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-hello-wolrd를-반환하는-간단한-서버를-node-js에-생성"}},[t._v("#")]),t._v(" 20. Hello Wolrd를 반환하는 간단한 서버를 Node.js에 생성")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funtion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Content-Type:'text/plain'\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Wolrd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("HTTP 모듈 가져오기")]),t._v(" "),a("li",[t._v("req, res를 매개변수로 사용하는 콜백함수와 함께 "),a("code",[t._v("createServer")]),t._v(" 함수를 사용")]),t._v(" "),a("li",[t._v("Hello World 입력")]),t._v(" "),a("li",[t._v("포트 8080을 수신하도록 하고 IP주소 할당")])]),t._v(" "),a("h2",{attrs:{id:"_21-node-js-비동기-및-논블로킹-api-설명"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-node-js-비동기-및-논블로킹-api-설명"}},[t._v("#")]),t._v(" 21. Node.js 비동기 및 논블로킹 API 설명")]),t._v(" "),a("ul",[a("li",[t._v("모든 Node.js 라이브러리 API는 비동기식이므로 논블로킹이다.")]),t._v(" "),a("li",[t._v("Node.js 기반 서버는 API가 데이터를 반환할 때까지 기다리지 않는다. 대신 호출 후 다음 API로 이동하고, Node.js 이벤트의 알림 매커니즘은 이전 API 호출에 대해 서버에 응답한다.")])]),t._v(" "),a("h2",{attrs:{id:"_22-node-js에서의-비동기-구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-node-js에서의-비동기-구현"}},[t._v("#")]),t._v(" 22. Node.js에서의 비동기 구현")]),t._v(" "),a("p",[t._v("async, await 이용")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:3000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetched response'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" Async / Await")]),t._v(" "),a("p",[t._v("ES8에 등장!")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://techlog.io/Javascript/General/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B9%84%EB%8F%99%EA%B8%B0%ED%86%B5%EC%8B%A0-callback-promise-async-await-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("자바스크립트 비동기통신 Callback, Promise, Async/Await 이해하기"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"async-await이-callback이나-promise보다-나은-점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await이-callback이나-promise보다-나은-점"}},[t._v("#")]),t._v(" Async / Await이 Callback이나 Promise보다 나은 점")]),t._v(" "),a("ul",[a("li",[t._v("자바와 같이 동기적 코드 흐름으로 개발이 가능하다.")]),t._v(" "),a("li",[t._v("코드가 간결해지고, 가독성이 높아진다.")]),t._v(" "),a("li",[t._v("응답데이터로 들어오는 변수(관례적으로 많이 사용되는 data, response)를 없앨 수 있다.")]),t._v(" "),a("li",[t._v("try / catch로 에러를 핸들링할 수 있다.")]),t._v(" "),a("li",[t._v("error가 어디서 발생했는지 알기 쉽다.")])]),t._v(" "),a("h3",{attrs:{id:"promise-와-async-await-의-차이점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-와-async-await-의-차이점"}},[t._v("#")]),t._v(" Promise 와 async/await 의 차이점")]),t._v(" "),a("ul",[a("li",[t._v("에러 핸들링\n"),a("ul",[a("li",[t._v("Promise 를 활용할 시에는 .catch() 문을 통해 에러 핸들링이 가능하지만, async/await 은 에러 핸들링 할 수 있는 기능이 없어 try-catch() 문을 활용해야 한다")])])]),t._v(" "),a("li",[t._v("코드 가독성\n"),a("ul",[a("li",[t._v("Promise의 .then() 지옥의 가능성")]),t._v(" "),a("li",[t._v("코드가 길어지면 길어질수록, async/await 를 활용한 코드가 가독성이 좋다.")]),t._v(" "),a("li",[t._v("async/await 은 비동기 코드가 동기 코드처럼 읽히게 해준다. 코드 흐름을 이해 하기 쉽다.")])])])]),t._v(" "),a("h3",{attrs:{id:"_23-module-exports의-목적"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-module-exports의-목적"}},[t._v("#")]),t._v(" 23. module.exports의 목적")]),t._v(" "),a("p",[t._v("Node.js의 모듈은 모든 관련 코드를 단일 코드 단위로 캡슐화 하는 데 사용되며 모든 관련 기능을 단일 파일로 해석할 수 있다. module.exports를 사용하여 모듈을 내보낼 수 있다. 그러면 필수 키워드를 사용하여 다른 파일로 가져올 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"_24-node-js에서-콜백함수란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-node-js에서-콜백함수란"}},[t._v("#")]),t._v(" 24. Node.js에서 콜백함수란")]),t._v(" "),a("p",[t._v("콜백은 주어진 작업 후에 호출되는 함수이다. 이렇게하면 블로킹이 방지되고 그동안 다른 코드가 실행될 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"_25-repl-이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-repl-이란"}},[t._v("#")]),t._v(" 25. REPL 이란")]),t._v(" "),a("p",[t._v("Read Eval Print Loop의 약자로 컴퓨터 환경을 나타낸다.")]),t._v(" "),a("h2",{attrs:{id:"_26-control-flow-function-이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-control-flow-function-이란"}},[t._v("#")]),t._v(" 26. Control Flow Function 이란")]),t._v(" "),a("h2",{attrs:{id:"_27-node-js에서-fork-와-spawn-메소드의-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-node-js에서-fork-와-spawn-메소드의-차이"}},[t._v("#")]),t._v(" 27. Node.js에서 fork()와 spawn() 메소드의 차이")]),t._v(" "),a("h2",{attrs:{id:"_28-node-js의-buffer-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-node-js의-buffer-클래스"}},[t._v("#")]),t._v(" 28. Node.js의 buffer 클래스")]),t._v(" "),a("p",[t._v("버퍼 클래스는 정수 배열과 유사한 raw 데이터를 저장하지만, V8 Heap 외부의 raw 메모리 할당에 해당한다. 순수 Javascript는 바이너리 데이터와 호환되지 않기 때문에 버퍼클래스가 사용된다.")]),t._v(" "),a("h2",{attrs:{id:"_29-node-js-에서-파이핑이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-node-js-에서-파이핑이란"}},[t._v("#")]),t._v(" 29. Node.js 에서 파이핑이란?")]),t._v(" "),a("p",[t._v("파이핑은 한 스트림의 출력을 다른 스트림에 연결하는데 사용되는 매커니즘이다. 일반적으로 한 스트림에서 데이터를 검색하고 다른 스트림으로 출력을 전달하는 데 사용된다.")]),t._v(" "),a("h2",{attrs:{id:"_30-node-js에서-파일을-열려면"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-node-js에서-파일을-열려면"}},[t._v("#")]),t._v(" 30. Node.js에서 파일을 열려면?")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_31-콜백지옥이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-콜백지옥이란"}},[t._v("#")]),t._v(" 31. 콜백지옥이란?")]),t._v(" "),a("p",[t._v("비동기 논리의 부적절한 구현으로 인해 콜백 지옥이 발생한다. 중첩되어 가독성이 떨어지며 관리하기 어렵다."),a("br"),t._v("\n그래서 "),a("code",[t._v("Promise")]),t._v("를 쓰게 됨")]),t._v(" "),a("h2",{attrs:{id:"_32-테스트-피라미드란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-테스트-피라미드란"}},[t._v("#")]),t._v(" 32. 테스트 피라미드란?")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.simplilearn.com/ice9/free_resources_article_thumb/test-pyramid.JPG",alt:"test-pyramid"}})]),t._v(" "),a("h2",{attrs:{id:"_33-node-js에서의-미들웨어"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-node-js에서의-미들웨어"}},[t._v("#")]),t._v(" 33. Node.js에서의 미들웨어")]),t._v(" "),a("p",[t._v("미들웨어는 요청 및 응답 객체를 수신하는 기능이다. 기능은 대부분 아래와 같다.")]),t._v(" "),a("ul",[a("li",[t._v("모든 코드 실행")]),t._v(" "),a("li",[t._v("요청 및 응답 개체 업데이트 또는 수정")]),t._v(" "),a("li",[t._v("요청-응답 주기 완료")]),t._v(" "),a("li",[t._v("스택의 다음 미들웨어 호출")])]),t._v(" "),a("h2",{attrs:{id:"_34-http-요청-유형은-무엇인가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-http-요청-유형은-무엇인가"}},[t._v("#")]),t._v(" 34. HTTP 요청 유형은 무엇인가?")]),t._v(" "),a("p",[t._v("GET : 데이터 검색에 사용"),a("br"),t._v("\nPOST : 일반적으로 서버의 상태 또는 반응을 변경하는 데 사용"),a("br"),t._v("\nHEAD : 응답 본문 없이 응답 요청"),a("br"),t._v("\nDELETE : 소정의 자원을 삭제할 때 사용")]),t._v(" "),a("h2",{attrs:{id:"_35-mongodb-데이터베이스를-node-js에-어떻게-연결"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-mongodb-데이터베이스를-node-js에-어떻게-연결"}},[t._v("#")]),t._v(" 35. MongoDB 데이터베이스를 Node.js에 어떻게 연결?")]),t._v(" "),a("ol",[a("li",[t._v("MongoClient 객체 생성")]),t._v(" "),a("li",[t._v("생성하려는 데이터베이스의 이름과 올바른 IP 주소로 연결 URL을 지정")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" MongoClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongodb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MongoClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongodb:localhost:3306/mydb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nMongoClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Database created!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_36-node-env의-목적"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-node-env의-목적"}},[t._v("#")]),t._v(" 36. NODE_ENV의 목적")]),t._v(" "),a("h2",{attrs:{id:"_37-es5와-es6-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37-es5와-es6-차이"}},[t._v("#")]),t._v(" 37. ES5와 ES6 차이")]),t._v(" "),a("h3",{attrs:{id:"let-const-키워드-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-const-키워드-추가"}},[t._v("#")]),t._v(" "),a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(" 키워드 추가")]),t._v(" "),a("p",[t._v("함수레벨 스코프를 따르던 "),a("code",[t._v("var")]),t._v(" 키워드 외에 블록레벨 스코프를 따르는 "),a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(" 키워드가 추가되었다.")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("let")]),t._v(" : 재할당 가능")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("const")]),t._v(" : 재할당 불가능")])]),t._v(" "),a("li",[a("p",[t._v("블록레벨 스코프 : 모든 코드 블록 내에서 선언된 변수는 코드 블록 내에서만 유효하고 코드 블록 외에서는 참조 불가")])]),t._v(" "),a("li",[a("p",[t._v("함수레벨 스코프 : 함수 내에서 선언된 변수는 함수 내에서만 유효하며 함수 외부에서는 참조 불가. 함수 내, 지역변수. 함수 밖, 전역 변수.")])])]),t._v(" "),a("h3",{attrs:{id:"arrow-function-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arrow-function-추가"}},[t._v("#")]),t._v(" Arrow function 추가")]),t._v(" "),a("p",[t._v("this, prototype, arguments 세가지가 없으며. 익명 함수로만 사용할 수 있다.")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("this")]),a("br"),t._v("\n일반 함수는 호출할 때 어떻게 호출되는지에 따라 this에 바인딩 될 객체가 동적으로 결정되지만, 애로우 펑션은 "),a("strong",[t._v("선언")]),t._v(" 할 때 this에 바인딩될 객체가 정적으로 결정된다. 애로우 펑션의 this는 항상 상위 scope의 this를 의미한다. 자신만의 this를 새엇ㅇ하지 않는 익명함수이다.(Lexical this)")])]),t._v(" "),a("li",[a("p",[t._v("prototype\n생성자 함수로 사용할 수 없다. new 사용시 오류 발생.")])]),t._v(" "),a("li",[a("p",[t._v("arguments\n매개변수를 지정하지 않아도 arguments 프로퍼티가 함수에 자동으로 생성되어 사용 가능 했었으나, arguments가 없어졌다.(대신 args가 생김.)")])]),t._v(" "),a("li",[a("p",[t._v("호이스팅(Hoisting) 될 수 없다\n코드에 선언된 변수 및 함수를 코드 상단으로 끌어 올리는 것."),a("br"),t._v("\n(함수 내에서 선언한 함수 범위의 변수는 해당 함수 최상위로 호이스팅 됨. 하지만 애로우펑션은 불가.)")])])]),t._v(" "),a("h4",{attrs:{id:"arrow-function을-사용해선-안-되는-경우"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arrow-function을-사용해선-안-되는-경우"}},[t._v("#")]),t._v(" Arrow Function을 사용해선 안 되는 경우")]),t._v(" "),a("ol",[a("li",[t._v("객체의 메소드에서 사용 시")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Nara'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hi ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hi undefined")]),t._v("\n")])])]),a("p",[t._v("상위 scope의 this를 계승하기 때문에 이 경우 전역 객체를 가리키게 됨.")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("addEventListener")]),t._v("의 콜백함수")])]),t._v(" "),a("h3",{attrs:{id:"default-parameter-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-parameter-추가"}},[t._v("#")]),t._v(" Default parameter 추가")]),t._v(" "),a("p",[t._v("인자가 없거나 "),a("code",[t._v("undefined")]),t._v(" 인 경우에 들어갈 기본값을 설정해놓아야 한다\nES6에서는 기본 매개 변수를 제공하고, 매개 변수가 없을 경우 지정한 기본값을 인자로 전달한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'student'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hi Student!")]),t._v("\n")])])]),a("h3",{attrs:{id:"templete-literal-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#templete-literal-추가"}},[t._v("#")]),t._v(" Templete literal 추가")]),t._v(" "),a("p",[t._v("백틱으로 문자열과 값을 간단하게 사용 가능 오예!")]),t._v(" "),a("h4",{attrs:{id:"multi-line-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-line-string"}},[t._v("#")]),t._v(" multi-line string")]),t._v(" "),a("p",[t._v("그렇기 때문에 백틱으로 멀티라인 스트링도 쉽게 다룰 수 있게 됨")]),t._v(" "),a("h3",{attrs:{id:"destructuring-assignment-비구조화-할당"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#destructuring-assignment-비구조화-할당"}},[t._v("#")]),t._v(" Destructuring Assignment 비구조화 할당")]),t._v(" "),a("p",[t._v("배열이나 객체의 요소를 해체하여 별개의 변수로 추출할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#클래스"}},[t._v("#")]),t._v(" 클래스")]),t._v(" "),a("p",[a("code",[t._v("new")]),t._v(" 키워드로 Class 생성가능. "),a("code",[t._v("constructor()")]),t._v(" 생성자 함수로 속성 설정 가능."),a("br"),t._v("\n메서드 정의, 상속, 부모 메서드 호출 가능한 Class를 사용할 수 있다."),a("br"),t._v("\n프로토 타입과 클래스가 다르지 않다. 즉, 프로토 타입으로 상속을 구현했을 경우 클래스 문법을 사용할 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"모듈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#모듈"}},[t._v("#")]),t._v(" 모듈")]),t._v(" "),a("p",[t._v("재사용하기 위한 코드 조각들을 의미.\n"),a("code",[t._v("export")]),t._v(", "),a("code",[t._v("import")]),t._v("로 모듈을 내보내고 불러올 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"promise-프로미스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-프로미스"}},[t._v("#")]),t._v(" Promise 프로미스")]),t._v(" "),a("p",[t._v("비동기를 위한 객체, 어떤 일의 진행 상태를 나타내는 객체로 상태와 값이라는 속성을 갖고 있다.\n"),a("code",[t._v("resolve")]),t._v(", "),a("code",[t._v("reject")]),t._v(" 를 호출하여 진행 상태를 결정할 수 있다. promise의 값은 "),a("code",[t._v("resolve")]),t._v(", "),a("code",[t._v("reject")]),t._v("를 호출할 때 넘긴 인자에 의해 결정된다."),a("br"),t._v(" "),a("code",[t._v("then()")]),t._v(", "),a("code",[t._v("catch()")]),t._v(" 는 일의 진행 상태를 나타내는 객체로, promise가 fullfilled일 때 "),a("code",[t._v("then()")]),t._v("에 등록된 함수를 실행하고 promise가 "),a("code",[t._v("rejected")]),t._v(" 일 때 아무것도 하지 않는다.")]),t._v(" "),a("h2",{attrs:{id:"_38-closure-클로저-함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38-closure-클로저-함수"}},[t._v("#")]),t._v(" 38. Closure 클로저 함수")]),t._v(" "),a("p",[t._v("리턴된 함수에서 자신을 만들어준 함수 내의 변수에 접근하는 것."),a("br"),t._v("\n함수 안에서 새로운 함수를 만들어서 변환하는 경우에는 예외적으로 변수 접근을 허용한다.")]),t._v(" "),a("p",[t._v("클로저는 자바스크립트 고유의 개념이 아니라 함수를 일급 객체로 취급하는 함수형 프로그래밍 언어(Functional Programming language: 얼랭(Erlnag), 스칼라(Scala), 하스켈(Haskell), 리스프(Lisp)…)에서 사용되는 중요한 특성이다.")]),t._v(" "),a("p",[t._v("클로저는 반환된 내부함수가 자신이 선언됐을 때의 환경(Lexical environment)인 스코프를 기억하여 자신이 선언됐을 때의 환경(스코프) 밖에서 호출되어도 그 환경(스코프)에 접근할 수 있는 함수")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" historyCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("history")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    historyCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" history "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"더하기 결과"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 자신을 만들어준 함수 내의 변수에 접근하기")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"결과값"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"결과값"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"결과값"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("상태 유지 : 클로저가 가장 유용하게 사용되는 상황은 현재 상태를 기억하고 변경된 최신 상태를 유지하는 것이다.")]),t._v(" "),a("li",[t._v("전역 변수의 사용 억제")]),t._v(" "),a("li",[t._v("정보의 은닉")]),t._v(" "),a("li",[t._v("내부함수가 참조하는 외부함수의 객체들을 더이상 사용하지 않아도 가비지 콜렉터가 수집하지 못하므로 메모리 누수에 조심해야한다.")])]),t._v(" "),a("h2",{attrs:{id:"_39-lexical-scoping-렉시컬-스코핑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39-lexical-scoping-렉시컬-스코핑"}},[t._v("#")]),t._v(" 39. Lexical scoping 렉시컬 스코핑")]),t._v(" "),a("p",[t._v("스코프는 함수를 호출할 때가 아니라 함수를 어디에 선언하였는지에 따라 결정된다. 이를 렉시컬 스코핑(Lexical scoping)라 한다. 위 예제의 함수 innerFunc는 함수 outerFunc의 내부에서 선언되었기 때문에 함수 innerFunc의 상위 스코프는 함수 outerFunc이다. 함수 innerFunc가 전역에 선언되었다면 함수 innerFunc의 상위 스코프는 전역 스코프가 된다.")]),t._v(" "),a("h2",{attrs:{id:"_40-이벤트-루프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40-이벤트-루프"}},[t._v("#")]),t._v(" 40. 이벤트 루프")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://evan-moon.github.io/2019/08/01/nodejs-event-loop-workflow/",target:"_blank",rel:"noopener noreferrer"}},[t._v("로우 레벨로 살펴보는 Node.js 이벤트 루프"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://nodejs.org/ko/docs/guides/event-loop-timers-and-nexttick/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js 이벤트 루프, 타이머, process.nextTick()"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("다음은 Node.JS의 Event Loop 동작 방식이다. Node.JS의 이벤트 루프는 시스템 커널에 Task를 Offloading함으로써 JavaScript의 Single Thread라는 약점을 개선하는 방식으로 사용된다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);