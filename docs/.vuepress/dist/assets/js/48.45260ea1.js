(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{523:function(t,a,r){"use strict";r.r(a);var v=r(25),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("Description")]),t._v(" "),r("p",[t._v(t._s(t.$frontmatter.description))])]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#프로세스란"}},[t._v("프로세스란")])]),r("li",[r("a",{attrs:{href:"#스케쥴러와-프로세스"}},[t._v("스케쥴러와 프로세스")])]),r("li",[r("a",{attrs:{href:"#스케쥴링-알고리즘"}},[t._v("스케쥴링 알고리즘")]),r("ul",[r("li",[r("a",{attrs:{href:"#fifo-스케쥴러"}},[t._v("FIFO 스케쥴러")])]),r("li",[r("a",{attrs:{href:"#최단-작업-우선-sjf-스케쥴러"}},[t._v("최단 작업 우선 (SJF) 스케쥴러")])]),r("li",[r("a",{attrs:{href:"#우선-순위-기반-스케쥴러"}},[t._v("우선 순위 기반 스케쥴러")])]),r("li",[r("a",{attrs:{href:"#round-robin-스케쥴러"}},[t._v("Round Robin 스케쥴러")])])])])])]),r("p"),t._v(" "),r("h2",{attrs:{id:"프로세스란"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#프로세스란"}},[t._v("#")]),t._v(" 프로세스란")]),t._v(" "),r("ul",[r("li",[t._v("실행중인 프로그램은 프로세스라고 함\n"),r("ul",[r("li",[t._v("프로세스: 메모리에 올려져서, 실행 중인 프로그램")]),t._v(" "),r("li",[t._v("코드 이미지(바이너리) : 실행 파일, 예:EFL format\n"),r("blockquote",[r("p",[t._v("프로세스라는 용어는 작업, task, job 이라는 용어와 혼용")])])])])])]),t._v(" "),r("ul",[r("li",[t._v("응용 프로그램 != 프로세스\n"),r("ul",[r("li",[t._v("응용 프로그램은 여러 개의 프로세스로 이루어질 수 있음")])])]),t._v(" "),r("li",[t._v("하나의 응용 프로그램은 여러개의 프로세스(프로그램)가 상호작용을 하면서 실행 될 수도 있음.")])]),t._v(" "),r("blockquote",[r("p",[t._v("여러 프로그램을 만들어서, 서로 통신하면서 프로그램을 작성할수도 있음 (IPC 기법)")])]),t._v(" "),r("h2",{attrs:{id:"스케쥴러와-프로세스"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#스케쥴러와-프로세스"}},[t._v("#")]),t._v(" 스케쥴러와 프로세스")]),t._v(" "),r("blockquote",[r("p",[t._v("프로세스 실행을 관리하는 스케쥴러")])]),t._v(" "),r("h2",{attrs:{id:"스케쥴링-알고리즘"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#스케쥴링-알고리즘"}},[t._v("#")]),t._v(" 스케쥴링 알고리즘")]),t._v(" "),r("blockquote",[r("p",[t._v("어느 순서대로 프로세스를 실행시킬까?")])]),t._v(" "),r("ul",[r("li",[t._v("목표\n"),r("ul",[r("li",[t._v("시분할 시스템 예: 프로세스 응답 시간을 가능한 짧게")]),t._v(" "),r("li",[t._v("멀티 프로그래밍 예 : CPU 활용도를 최대로 높혀서, 프로세스를 빨리 실행")])])])]),t._v(" "),r("h3",{attrs:{id:"fifo-스케쥴러"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fifo-스케쥴러"}},[t._v("#")]),t._v(" FIFO 스케쥴러")]),t._v(" "),r("blockquote",[r("p",[t._v("프로세스가 저장매체를 읽는다든지, 프린팅을 한다든지 하는 작업 없이 쭉 CPU를 처음부터 끝까지 사용한다는 가정")])]),t._v(" "),r("ul",[r("li",[t._v("가장 간단한 스케쥴러(배치 처리 시스템)")]),t._v(" "),r("li",[t._v("FCFS (First Come First Served) 스케쥴러")]),t._v(" "),r("li",[t._v("Queue")])]),t._v(" "),r("h3",{attrs:{id:"최단-작업-우선-sjf-스케쥴러"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#최단-작업-우선-sjf-스케쥴러"}},[t._v("#")]),t._v(" 최단 작업 우선 (SJF) 스케쥴러")]),t._v(" "),r("ul",[r("li",[t._v("SJF(Shortest Job First) 스케쥴러\n"),r("ul",[r("li",[t._v("가장 프로세스 실행시간이 짧은 프로세스부터 먼저 실행을 시키는 알고리즘")])])])]),t._v(" "),r("hr"),t._v(" "),r("ul",[r("li",[t._v("RealTime OS(RTOS) : 응용 프로그램 실시간 성능 보장을 목표로 하는 OS\n"),r("ul",[r("li",[t._v("정확하게 프로그램 시작, 완료 시간을 보장")]),t._v(" "),r("li",[t._v("Hardware RTOS, Software RTOS")])])]),t._v(" "),r("li",[t._v("General Purpose OS(GPOS)\n"),r("ul",[r("li",[t._v("프로세스 실행시간에 민감하지 않고, 일반적인 목적으로 사용되는 OS. 예: Windows, Linux 등")])])])]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"우선-순위-기반-스케쥴러"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#우선-순위-기반-스케쥴러"}},[t._v("#")]),t._v(" 우선 순위 기반 스케쥴러")]),t._v(" "),r("ul",[r("li",[t._v("Priority-Based 스케쥴러\n"),r("ul",[r("li",[t._v("정적 우선순위\n"),r("ul",[r("li",[t._v("프로세스마다 우선순위를 미리 지정")])])]),t._v(" "),r("li",[t._v("동적 우선순위\n"),r("ul",[r("li",[t._v("스케쥴러가 상황에 따라 우선순위를 동적으로 변경")])])])])])]),t._v(" "),r("h3",{attrs:{id:"round-robin-스케쥴러"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#round-robin-스케쥴러"}},[t._v("#")]),t._v(" Round Robin 스케쥴러")]),t._v(" "),r("ul",[r("li",[t._v("시분할 시스템을 기반으로 함")])])])}),[],!1,null,null,null);a.default=_.exports}}]);