{"remainingRequest":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/docs/.vuepress/components/TagList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/docs/.vuepress/components/TagList.vue","mtime":1603429400111},{"path":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nara/Google Drive/ex-dropbox/projects/narashin-til/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKaW1wb3J0IHRhZ01ldGhvZHMgZnJvbSAnLi9taXhpbnMvdGFnLW1ldGhvZHMnCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFt0YWdNZXRob2RzXSwKICBjb21wdXRlZDogewogICAgdGFncygpIHsKICAgICAgbGV0IHRhZ3MgPSB7fQogICAgICBmb3IgKGxldCBwYWdlIG9mIHRoaXMuJHNpdGUucGFnZXMpIHsKICAgICAgICBmb3IgKGxldCBpbmRleCBpbiBwYWdlLmZyb250bWF0dGVyLnRhZ3MpIHsKICAgICAgICAgIGNvbnN0IHRhZyA9IHBhZ2UuZnJvbnRtYXR0ZXIudGFnc1tpbmRleF0KICAgICAgICAgIGNvbnN0IHRleHQgPSB0aGlzLmdldFRleHQodGFnKQogICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldFZhbHVlKHRhZykKICAgICAgICAgIGlmICh2YWx1ZSBpbiB0YWdzID09PSBmYWxzZSkgdGFnc1t2YWx1ZV0gPSB7dmFsdWUsIHRleHQ6IG51bGwsIHBhZ2VzOiBbXX0KICAgICAgICAgIC8vIHRleHTqsIAg7ZWc6riA7J24IOqyveyasCwg65Sw66GcIOyggOyepe2VtOuRlOuLpC4KICAgICAgICAgIGlmICghdGFnc1t2YWx1ZV0udGV4dCAmJiB0ZXh0ICE9PSB2YWx1ZSkgdGFnc1t2YWx1ZV0udGV4dCA9IHRleHQKICAgICAgICAgIC8vIOydtOuvuCDstpTqsIDrkJwg7Y6Y7J207KeA64qUIOyKpO2CtQogICAgICAgICAgaWYgKF8uZmluZEluZGV4KHRhZ3NbdmFsdWVdLnBhZ2VzLCBwID0+IHAua2V5ID09PSBwYWdlLmtleSkgPCAwKSB0YWdzW3ZhbHVlXS5wYWdlcy5wdXNoKHBhZ2UpCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBfLnNvcnRCeSh0YWdzLCBbJ3ZhbHVlJ10pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TagList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagList.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template lang=\"html\">\n  <div>\n    <span v-for=\"tag in tags\">\n      <h2 :id=\"tag.value\">\n        <router-link :to=\"{path: `/tags.html#${tag.value}`}\" class=\"header-anchor\" aria-hidden=\"true\">#</router-link>\n        {{tag.value}}<template v-if=\"tag.text\"> ({{tag.text}})</template>\n      </h2>\n      <ul>\n        <li v-for=\"page in tag.pages\">\n          <router-link :to=\"{path: page.path}\">{{page.title}}</router-link>\n        </li>\n      </ul>\n    </span>\n  </div>\n</template>\n<script>\nimport _ from 'lodash'\nimport tagMethods from './mixins/tag-methods'\nexport default {\n  mixins: [tagMethods],\n  computed: {\n    tags() {\n      let tags = {}\n      for (let page of this.$site.pages) {\n        for (let index in page.frontmatter.tags) {\n          const tag = page.frontmatter.tags[index]\n          const text = this.getText(tag)\n          const value = this.getValue(tag)\n          if (value in tags === false) tags[value] = {value, text: null, pages: []}\n          // text가 한글인 경우, 따로 저장해둔다.\n          if (!tags[value].text && text !== value) tags[value].text = text\n          // 이미 추가된 페이지는 스킵\n          if (_.findIndex(tags[value].pages, p => p.key === page.key) < 0) tags[value].pages.push(page)\n        }\n      }\n      return _.sortBy(tags, ['value'])\n    }\n  }\n}\n</script>"]}]}